from client import *
from hw01_helper import *
from hw2_helper import *

def binaryLeftRight(base,power,mod):
    binaryInt = bin(power)
    x = 1
    for c in binaryInt[2:]:
        x = (x * x) % mod
        if c == '1':
            x = (x * base) % mod
    return x % mod

p= 163812632438116402334651955238877888051471698595800699322979615035703105353498598900017754479082745390305183480326386193928762023006697325502630355995540302095536983747674239699082775937971908945314983176639634719523082664655125286220339981282043117576435108592265744474672826334454420325847233209118053745479
q = 167991311406281829893277907517380926743297770437237817698088843729837413680407121035993724942424328049100226903066919418963576739130754375674323262394889417412537943169688299724092631996519692955388293697048331540030669504591419100438660952486903606581569836090930608369486871356825028654569386086674053846173

e,c = getQ2()
phiN = (p - 1) * (q - 1)

gcd,x,y = egcd(e,phiN)
m1 = binaryLeftRight(c,x,(p * q))
# Convert m1 to binary representation
binary_m1 = bin(m1)[2:]

print(binary_m1)

# checkQ2("I think I have 616 unread e-mails. Is that a lot?")